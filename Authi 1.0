{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "gpuType": "T4",
      "provenance": [],
      "include_colab_link": true
    },
    "accelerator": "GPU",
    "kaggle": {
      "accelerator": "gpu"
    },
    "language_info": {
      "name": "python"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/SaluLink-Design/Authi-endocrine-dataset-training/blob/main/Authi%201.0\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "a11417e8"
      },
      "source": [
        "# Task\n",
        "Train an AI model to map medical conditions from \"Endocrine & Metabolic Disorders.csv\" to their diagnostic and ongoing management treatment baskets in \"Endocrine & Metabolic Disorders Treatment.csv\", and create a retrieval mechanism to present this structured treatment information when a condition is queried."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "f8f3b908"
      },
      "source": [
        "## Load data\n",
        "\n",
        "### Subtask:\n",
        "Load the two CSV files, \"Endocrine & Metabolic Disorders.csv\" and \"Endocrine & Metabolic Disorders Treatment.csv\", into pandas DataFrames.\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "efb532ee"
      },
      "source": [
        "**Reasoning**:\n",
        "Import pandas and load the two CSV files into dataframes as instructed.\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "19467f51"
      },
      "source": [
        "import pandas as pd\n",
        "\n",
        "disorders_df = pd.read_csv(\"Endocrine & Metabolic Disorders.csv\")\n",
        "treatment_df = pd.read_csv(\"Endocrine & Metabolic Disorders Treatment.csv\")"
      ],
      "execution_count": 1,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "430250ce"
      },
      "source": [
        "## Explore data\n",
        "\n",
        "### Subtask:\n",
        "Examine the structure and content of both DataFrames to understand the columns and data format.\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2fd6e78d"
      },
      "source": [
        "**Reasoning**:\n",
        "Display the first few rows and information of both dataframes to understand their structure and content.\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "5d8edba1",
        "outputId": "24bdd298-0480-4981-934e-767d64a64dfc"
      },
      "source": [
        "display(disorders_df.head())\n",
        "display(disorders_df.info())\n",
        "display(treatment_df.head())\n",
        "display(treatment_df.info())"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "         CHRONIC CONDITIONS Unnamed: 1  \\\n",
              "0         Addison's Disease      E27.1   \n",
              "1        Diabetes Insipidus      E23.2   \n",
              "2        Diabetes Insipidus      N25.1   \n",
              "3  Diabetes Mellitus Type 1      G59.0   \n",
              "4  Diabetes Mellitus Type 1      G63.2   \n",
              "\n",
              "                                          Unnamed: 2  Unnamed: 3  Unnamed: 4  \\\n",
              "0               Primary adrenocortical insufficiency         NaN         NaN   \n",
              "1                                 Diabetes insipidus         NaN         NaN   \n",
              "2                     Nephrogenic diabetes insipidus         NaN         NaN   \n",
              "3  Diabetic mononeuropathy (E10-E14+ with common ...         NaN         NaN   \n",
              "4  Diabetic polyneuropathy (E10-E14+ with common ...         NaN         NaN   \n",
              "\n",
              "   Unnamed: 5  \n",
              "0         NaN  \n",
              "1         NaN  \n",
              "2         NaN  \n",
              "3         NaN  \n",
              "4         NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f5969046-385d-4d67-9089-00676d3d7af4\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CHRONIC CONDITIONS</th>\n",
              "      <th>Unnamed: 1</th>\n",
              "      <th>Unnamed: 2</th>\n",
              "      <th>Unnamed: 3</th>\n",
              "      <th>Unnamed: 4</th>\n",
              "      <th>Unnamed: 5</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Addison's Disease</td>\n",
              "      <td>E27.1</td>\n",
              "      <td>Primary adrenocortical insufficiency</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Diabetes Insipidus</td>\n",
              "      <td>E23.2</td>\n",
              "      <td>Diabetes insipidus</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Diabetes Insipidus</td>\n",
              "      <td>N25.1</td>\n",
              "      <td>Nephrogenic diabetes insipidus</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Diabetes Mellitus Type 1</td>\n",
              "      <td>G59.0</td>\n",
              "      <td>Diabetic mononeuropathy (E10-E14+ with common ...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Diabetes Mellitus Type 1</td>\n",
              "      <td>G63.2</td>\n",
              "      <td>Diabetic polyneuropathy (E10-E14+ with common ...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f5969046-385d-4d67-9089-00676d3d7af4')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f5969046-385d-4d67-9089-00676d3d7af4 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f5969046-385d-4d67-9089-00676d3d7af4');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-d5b35704-edbe-43a4-b163-74c04feed0a1\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d5b35704-edbe-43a4-b163-74c04feed0a1')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-d5b35704-edbe-43a4-b163-74c04feed0a1 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(treatment_df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"CHRONIC CONDITIONS\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Addison's Disease\",\n          \"Diabetes Insipidus\",\n          \"Diabetes Mellitus Type 1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 1\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"E23.2\",\n          \"G63.2\",\n          \"N25.1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 2\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"Diabetes insipidus\",\n          \"Diabetic polyneuropathy (E10-E14+ with common fourth character .4)\",\n          \"Nephrogenic diabetes insipidus\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 149 entries, 0 to 148\n",
            "Data columns (total 6 columns):\n",
            " #   Column              Non-Null Count  Dtype  \n",
            "---  ------              --------------  -----  \n",
            " 0   CHRONIC CONDITIONS  149 non-null    object \n",
            " 1   Unnamed: 1          149 non-null    object \n",
            " 2   Unnamed: 2          149 non-null    object \n",
            " 3   Unnamed: 3          0 non-null      float64\n",
            " 4   Unnamed: 4          0 non-null      float64\n",
            " 5   Unnamed: 5          0 non-null      float64\n",
            "dtypes: float64(3), object(3)\n",
            "memory usage: 7.1+ KB\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "None"
            ]
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "           CONDITION  Unnamed: 1              DIAGNOSTIC BASKET  Unnamed: 3  \\\n",
              "0                NaN         NaN  PROCEDURE OR TEST DESCRIPTION         NaN   \n",
              "1  Addison’s disease         NaN                     U & E only         NaN   \n",
              "2                NaN         NaN                     Creatinine         NaN   \n",
              "3                NaN         NaN                 Cortisol level         NaN   \n",
              "4                NaN         NaN       ACTH stimulation testing         NaN   \n",
              "\n",
              "   Unnamed: 4  Unnamed: 5              Unnamed: 6  Unnamed: 7  \\\n",
              "0         NaN         NaN  PROCEDURE OR TEST CODE         NaN   \n",
              "1         NaN         NaN                    4171         NaN   \n",
              "2         NaN         NaN  4032 or\\n4221 or\\n4223         NaN   \n",
              "3         NaN         NaN                    4499         NaN   \n",
              "4         NaN         NaN                    4523         NaN   \n",
              "\n",
              "                               Unnamed: 8  Unnamed: 9  \\\n",
              "0  NUMBER OF PROCEDURES OR TESTS WE COVER         NaN   \n",
              "1                                       1         NaN   \n",
              "2                                       1         NaN   \n",
              "3                                       1         NaN   \n",
              "4                                       1         NaN   \n",
              "\n",
              "       ONGOING MANAGEMENT BASKET  Unnamed: 11             Unnamed: 12  \\\n",
              "0  PROCEDURE OR TEST DESCRIPTION          NaN  PROCEDURE OR TEST CODE   \n",
              "1                     U & E only          NaN                    4171   \n",
              "2                     Creatinine          NaN  4032 or\\n4221 or\\n4223   \n",
              "3                            NaN          NaN                     NaN   \n",
              "4                            NaN          NaN                     NaN   \n",
              "\n",
              "   Unnamed: 13                             Unnamed: 14  Unnamed: 15  \\\n",
              "0          NaN  NUMBER OF PROCEDURES OR TESTS WE COVER          NaN   \n",
              "1          NaN                                       3          NaN   \n",
              "2          NaN                                       3          NaN   \n",
              "3          NaN                                     NaN          NaN   \n",
              "4          NaN                                     NaN          NaN   \n",
              "\n",
              "                                Unnamed: 16  Unnamed: 17  Unnamed: 18  \n",
              "0  NUMBER OF SPECIALISTS WE COVER EACH YEAR          NaN          NaN  \n",
              "1                                         1          NaN          NaN  \n",
              "2                                       NaN          NaN          NaN  \n",
              "3                                       NaN          NaN          NaN  \n",
              "4                                       NaN          NaN          NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2afedcc2-d1c4-4752-836f-304e5ad2aaa7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CONDITION</th>\n",
              "      <th>Unnamed: 1</th>\n",
              "      <th>DIAGNOSTIC BASKET</th>\n",
              "      <th>Unnamed: 3</th>\n",
              "      <th>Unnamed: 4</th>\n",
              "      <th>Unnamed: 5</th>\n",
              "      <th>Unnamed: 6</th>\n",
              "      <th>Unnamed: 7</th>\n",
              "      <th>Unnamed: 8</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>ONGOING MANAGEMENT BASKET</th>\n",
              "      <th>Unnamed: 11</th>\n",
              "      <th>Unnamed: 12</th>\n",
              "      <th>Unnamed: 13</th>\n",
              "      <th>Unnamed: 14</th>\n",
              "      <th>Unnamed: 15</th>\n",
              "      <th>Unnamed: 16</th>\n",
              "      <th>Unnamed: 17</th>\n",
              "      <th>Unnamed: 18</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>PROCEDURE OR TEST DESCRIPTION</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>PROCEDURE OR TEST CODE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NUMBER OF PROCEDURES OR TESTS WE COVER</td>\n",
              "      <td>NaN</td>\n",
              "      <td>PROCEDURE OR TEST DESCRIPTION</td>\n",
              "      <td>NaN</td>\n",
              "      <td>PROCEDURE OR TEST CODE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NUMBER OF PROCEDURES OR TESTS WE COVER</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NUMBER OF SPECIALISTS WE COVER EACH YEAR</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Addison’s disease</td>\n",
              "      <td>NaN</td>\n",
              "      <td>U &amp; E only</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4171</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>U &amp; E only</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4171</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Creatinine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4032 or\\n4221 or\\n4223</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Creatinine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4032 or\\n4221 or\\n4223</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Cortisol level</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4499</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ACTH stimulation testing</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4523</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2afedcc2-d1c4-4752-836f-304e5ad2aaa7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2afedcc2-d1c4-4752-836f-304e5ad2aaa7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2afedcc2-d1c4-4752-836f-304e5ad2aaa7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-18f6980a-493e-4d32-b5b8-d8e09fcff3ae\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-18f6980a-493e-4d32-b5b8-d8e09fcff3ae')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-18f6980a-493e-4d32-b5b8-d8e09fcff3ae button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(treatment_df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"CONDITION\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Addison\\u2019s disease\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DIAGNOSTIC BASKET\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 6\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 7\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 8\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 9\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ONGOING MANAGEMENT BASKET\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 11\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 12\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 13\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 14\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 15\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 16\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 17\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 18\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 56 entries, 0 to 55\n",
            "Data columns (total 19 columns):\n",
            " #   Column                     Non-Null Count  Dtype  \n",
            "---  ------                     --------------  -----  \n",
            " 0   CONDITION                  11 non-null     object \n",
            " 1   Unnamed: 1                 0 non-null      float64\n",
            " 2   DIAGNOSTIC BASKET          45 non-null     object \n",
            " 3   Unnamed: 3                 0 non-null      float64\n",
            " 4   Unnamed: 4                 0 non-null      float64\n",
            " 5   Unnamed: 5                 0 non-null      float64\n",
            " 6   Unnamed: 6                 40 non-null     object \n",
            " 7   Unnamed: 7                 0 non-null      float64\n",
            " 8   Unnamed: 8                 40 non-null     object \n",
            " 9   Unnamed: 9                 0 non-null      float64\n",
            " 10  ONGOING MANAGEMENT BASKET  53 non-null     object \n",
            " 11  Unnamed: 11                0 non-null      float64\n",
            " 12  Unnamed: 12                48 non-null     object \n",
            " 13  Unnamed: 13                0 non-null      float64\n",
            " 14  Unnamed: 14                46 non-null     object \n",
            " 15  Unnamed: 15                0 non-null      float64\n",
            " 16  Unnamed: 16                11 non-null     object \n",
            " 17  Unnamed: 17                0 non-null      float64\n",
            " 18  Unnamed: 18                0 non-null      float64\n",
            "dtypes: float64(11), object(8)\n",
            "memory usage: 8.4+ KB\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "None"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "e1f41c6d"
      },
      "source": [
        "## Merge data\n",
        "\n",
        "### Subtask:\n",
        "Merge the two DataFrames based on the common medical condition to create a unified dataset.\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "a4802f16"
      },
      "source": [
        "**Reasoning**:\n",
        "Clean column names, fill forward the 'CONDITION' column in `treatment_df`, and then merge the two dataframes based on the condition column. A left merge is chosen to keep all conditions from the `disorders_df` and add the corresponding treatment information where available.\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "88bd7447",
        "outputId": "8b3ad482-a0bc-4394-e010-c4e3e5e21103"
      },
      "source": [
        "disorders_df.columns = disorders_df.columns.str.strip()\n",
        "treatment_df.columns = treatment_df.columns.str.strip()\n",
        "\n",
        "treatment_df['CONDITION'] = treatment_df['CONDITION'].fillna(method='ffill')\n",
        "\n",
        "merged_df = pd.merge(disorders_df, treatment_df, left_on='CHRONIC CONDITIONS', right_on='CONDITION', how='left')\n",
        "display(merged_df.head())\n",
        "display(merged_df.info())"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/tmp/ipython-input-971733352.py:4: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n",
            "  treatment_df['CONDITION'] = treatment_df['CONDITION'].fillna(method='ffill')\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "         CHRONIC CONDITIONS Unnamed: 1_x  \\\n",
              "0         Addison's Disease        E27.1   \n",
              "1        Diabetes Insipidus        E23.2   \n",
              "2        Diabetes Insipidus        N25.1   \n",
              "3  Diabetes Mellitus Type 1        G59.0   \n",
              "4  Diabetes Mellitus Type 1        G63.2   \n",
              "\n",
              "                                          Unnamed: 2  Unnamed: 3_x  \\\n",
              "0               Primary adrenocortical insufficiency           NaN   \n",
              "1                                 Diabetes insipidus           NaN   \n",
              "2                     Nephrogenic diabetes insipidus           NaN   \n",
              "3  Diabetic mononeuropathy (E10-E14+ with common ...           NaN   \n",
              "4  Diabetic polyneuropathy (E10-E14+ with common ...           NaN   \n",
              "\n",
              "   Unnamed: 4_x  Unnamed: 5_x CONDITION  Unnamed: 1_y DIAGNOSTIC BASKET  \\\n",
              "0           NaN           NaN       NaN           NaN               NaN   \n",
              "1           NaN           NaN       NaN           NaN               NaN   \n",
              "2           NaN           NaN       NaN           NaN               NaN   \n",
              "3           NaN           NaN       NaN           NaN               NaN   \n",
              "4           NaN           NaN       NaN           NaN               NaN   \n",
              "\n",
              "   Unnamed: 3_y  ...  Unnamed: 9  ONGOING MANAGEMENT BASKET Unnamed: 11  \\\n",
              "0           NaN  ...         NaN                        NaN         NaN   \n",
              "1           NaN  ...         NaN                        NaN         NaN   \n",
              "2           NaN  ...         NaN                        NaN         NaN   \n",
              "3           NaN  ...         NaN                        NaN         NaN   \n",
              "4           NaN  ...         NaN                        NaN         NaN   \n",
              "\n",
              "   Unnamed: 12 Unnamed: 13  Unnamed: 14 Unnamed: 15  Unnamed: 16 Unnamed: 17  \\\n",
              "0          NaN         NaN          NaN         NaN          NaN         NaN   \n",
              "1          NaN         NaN          NaN         NaN          NaN         NaN   \n",
              "2          NaN         NaN          NaN         NaN          NaN         NaN   \n",
              "3          NaN         NaN          NaN         NaN          NaN         NaN   \n",
              "4          NaN         NaN          NaN         NaN          NaN         NaN   \n",
              "\n",
              "   Unnamed: 18  \n",
              "0          NaN  \n",
              "1          NaN  \n",
              "2          NaN  \n",
              "3          NaN  \n",
              "4          NaN  \n",
              "\n",
              "[5 rows x 25 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-46070a5f-e0e4-4db7-9df7-8d07fa4159c7\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CHRONIC CONDITIONS</th>\n",
              "      <th>Unnamed: 1_x</th>\n",
              "      <th>Unnamed: 2</th>\n",
              "      <th>Unnamed: 3_x</th>\n",
              "      <th>Unnamed: 4_x</th>\n",
              "      <th>Unnamed: 5_x</th>\n",
              "      <th>CONDITION</th>\n",
              "      <th>Unnamed: 1_y</th>\n",
              "      <th>DIAGNOSTIC BASKET</th>\n",
              "      <th>Unnamed: 3_y</th>\n",
              "      <th>...</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>ONGOING MANAGEMENT BASKET</th>\n",
              "      <th>Unnamed: 11</th>\n",
              "      <th>Unnamed: 12</th>\n",
              "      <th>Unnamed: 13</th>\n",
              "      <th>Unnamed: 14</th>\n",
              "      <th>Unnamed: 15</th>\n",
              "      <th>Unnamed: 16</th>\n",
              "      <th>Unnamed: 17</th>\n",
              "      <th>Unnamed: 18</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Addison's Disease</td>\n",
              "      <td>E27.1</td>\n",
              "      <td>Primary adrenocortical insufficiency</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Diabetes Insipidus</td>\n",
              "      <td>E23.2</td>\n",
              "      <td>Diabetes insipidus</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Diabetes Insipidus</td>\n",
              "      <td>N25.1</td>\n",
              "      <td>Nephrogenic diabetes insipidus</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Diabetes Mellitus Type 1</td>\n",
              "      <td>G59.0</td>\n",
              "      <td>Diabetic mononeuropathy (E10-E14+ with common ...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Diabetes Mellitus Type 1</td>\n",
              "      <td>G63.2</td>\n",
              "      <td>Diabetic polyneuropathy (E10-E14+ with common ...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 25 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-46070a5f-e0e4-4db7-9df7-8d07fa4159c7')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-46070a5f-e0e4-4db7-9df7-8d07fa4159c7 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-46070a5f-e0e4-4db7-9df7-8d07fa4159c7');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-88cdf5f3-cd73-4ff7-b094-787d2bcada42\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-88cdf5f3-cd73-4ff7-b094-787d2bcada42')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-88cdf5f3-cd73-4ff7-b094-787d2bcada42 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 187 entries, 0 to 186\n",
            "Data columns (total 25 columns):\n",
            " #   Column                     Non-Null Count  Dtype  \n",
            "---  ------                     --------------  -----  \n",
            " 0   CHRONIC CONDITIONS         187 non-null    object \n",
            " 1   Unnamed: 1_x               187 non-null    object \n",
            " 2   Unnamed: 2                 187 non-null    object \n",
            " 3   Unnamed: 3_x               0 non-null      float64\n",
            " 4   Unnamed: 4_x               0 non-null      float64\n",
            " 5   Unnamed: 5_x               0 non-null      float64\n",
            " 6   CONDITION                  57 non-null     object \n",
            " 7   Unnamed: 1_y               0 non-null      float64\n",
            " 8   DIAGNOSTIC BASKET          57 non-null     object \n",
            " 9   Unnamed: 3_y               0 non-null      float64\n",
            " 10  Unnamed: 4_y               0 non-null      float64\n",
            " 11  Unnamed: 5_y               0 non-null      float64\n",
            " 12  Unnamed: 6                 57 non-null     object \n",
            " 13  Unnamed: 7                 0 non-null      float64\n",
            " 14  Unnamed: 8                 57 non-null     object \n",
            " 15  Unnamed: 9                 0 non-null      float64\n",
            " 16  ONGOING MANAGEMENT BASKET  38 non-null     object \n",
            " 17  Unnamed: 11                0 non-null      float64\n",
            " 18  Unnamed: 12                38 non-null     object \n",
            " 19  Unnamed: 13                0 non-null      float64\n",
            " 20  Unnamed: 14                38 non-null     object \n",
            " 21  Unnamed: 15                0 non-null      float64\n",
            " 22  Unnamed: 16                19 non-null     object \n",
            " 23  Unnamed: 17                0 non-null      float64\n",
            " 24  Unnamed: 18                0 non-null      float64\n",
            "dtypes: float64(14), object(11)\n",
            "memory usage: 36.7+ KB\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "None"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "c6dac28c"
      },
      "source": [
        "**Reasoning**:\n",
        "The merge was performed, but the 'CONDITION' column in the merged dataframe still has many null values, indicating that the fill forward in the treatment_df was not completely effective before merging. Also, the column names are not very descriptive due to the 'Unnamed' columns. The next step is to inspect the `treatment_df` after the fill forward to understand why the merge resulted in so many nulls in the 'CONDITION' column of `merged_df`.\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "IOHNuiZhJvZq",
        "outputId": "481324d4-4391-447e-bb5f-779e4b22ecf3"
      },
      "source": [
        "display(treatment_df.head(20))"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "                   CONDITION  Unnamed: 1              DIAGNOSTIC BASKET  \\\n",
              "0                        NaN         NaN  PROCEDURE OR TEST DESCRIPTION   \n",
              "1          Addison’s disease         NaN                     U & E only   \n",
              "2          Addison’s disease         NaN                     Creatinine   \n",
              "3          Addison’s disease         NaN                 Cortisol level   \n",
              "4          Addison’s disease         NaN       ACTH stimulation testing   \n",
              "5                  CONDITION         NaN              DIAGNOSTIC BASKET   \n",
              "6                  CONDITION         NaN  PROCEDURE OR TEST DESCRIPTION   \n",
              "7         Diabetes insipidus         NaN                     U & E only   \n",
              "8         Diabetes insipidus         NaN                     Creatinine   \n",
              "9         Diabetes insipidus         NaN     Osmolality: Serum or urine   \n",
              "10                 CONDITION         NaN              DIAGNOSTIC BASKET   \n",
              "11                 CONDITION         NaN  PROCEDURE OR TEST DESCRIPTION   \n",
              "12  Diabetes mellitus type 1         NaN       ECG –\\nElectrocardiogram   \n",
              "13  Diabetes mellitus type 1         NaN               Microalbuminuria   \n",
              "14  Diabetes mellitus type 1         NaN      Urine analysis (dipstick)   \n",
              "15  Diabetes mellitus type 1         NaN                LDL cholesterol   \n",
              "16  Diabetes mellitus type 1         NaN                HDL cholesterol   \n",
              "17  Diabetes mellitus type 1         NaN              Total cholesterol   \n",
              "18  Diabetes mellitus type 1         NaN                  Triglycerides   \n",
              "19  Diabetes mellitus type 1         NaN                     U & E only   \n",
              "\n",
              "    Unnamed: 3  Unnamed: 4  Unnamed: 5              Unnamed: 6  Unnamed: 7  \\\n",
              "0          NaN         NaN         NaN  PROCEDURE OR TEST CODE         NaN   \n",
              "1          NaN         NaN         NaN                    4171         NaN   \n",
              "2          NaN         NaN         NaN  4032 or\\n4221 or\\n4223         NaN   \n",
              "3          NaN         NaN         NaN                    4499         NaN   \n",
              "4          NaN         NaN         NaN                    4523         NaN   \n",
              "5          NaN         NaN         NaN                     NaN         NaN   \n",
              "6          NaN         NaN         NaN  PROCEDURE OR TEST CODE         NaN   \n",
              "7          NaN         NaN         NaN                    4171         NaN   \n",
              "8          NaN         NaN         NaN  4032 or\\n4221 or\\n4223         NaN   \n",
              "9          NaN         NaN         NaN                    4093         NaN   \n",
              "10         NaN         NaN         NaN                     NaN         NaN   \n",
              "11         NaN         NaN         NaN  PROCEDURE OR TEST CODE         NaN   \n",
              "12         NaN         NaN         NaN  1232 or\\n1233 or\\n1236         NaN   \n",
              "13         NaN         NaN         NaN           4261 or\\n4262         NaN   \n",
              "14         NaN         NaN         NaN                    4188         NaN   \n",
              "15         NaN         NaN         NaN                    4026         NaN   \n",
              "16         NaN         NaN         NaN                    4028         NaN   \n",
              "17         NaN         NaN         NaN                    4027         NaN   \n",
              "18         NaN         NaN         NaN                    4147         NaN   \n",
              "19         NaN         NaN         NaN                    4171         NaN   \n",
              "\n",
              "                                Unnamed: 8  Unnamed: 9  \\\n",
              "0   NUMBER OF PROCEDURES OR TESTS WE COVER         NaN   \n",
              "1                                        1         NaN   \n",
              "2                                        1         NaN   \n",
              "3                                        1         NaN   \n",
              "4                                        1         NaN   \n",
              "5                                      NaN         NaN   \n",
              "6   NUMBER OF PROCEDURES OR TESTS WE COVER         NaN   \n",
              "7                                        1         NaN   \n",
              "8                                        1         NaN   \n",
              "9                                        1         NaN   \n",
              "10                                     NaN         NaN   \n",
              "11  NUMBER OF PROCEDURES OR TESTS WE COVER         NaN   \n",
              "12                                       1         NaN   \n",
              "13                                       1         NaN   \n",
              "14                                       1         NaN   \n",
              "15                                       1         NaN   \n",
              "16                                       1         NaN   \n",
              "17                                       1         NaN   \n",
              "18                                       1         NaN   \n",
              "19                                       1         NaN   \n",
              "\n",
              "        ONGOING MANAGEMENT BASKET  Unnamed: 11             Unnamed: 12  \\\n",
              "0   PROCEDURE OR TEST DESCRIPTION          NaN  PROCEDURE OR TEST CODE   \n",
              "1                      U & E only          NaN                    4171   \n",
              "2                      Creatinine          NaN  4032 or\\n4221 or\\n4223   \n",
              "3                             NaN          NaN                     NaN   \n",
              "4                             NaN          NaN                     NaN   \n",
              "5       ONGOING MANAGEMENT BASKET          NaN                     NaN   \n",
              "6   PROCEDURE OR TEST DESCRIPTION          NaN  PROCEDURE OR TEST CODE   \n",
              "7                      U & E only          NaN                    4171   \n",
              "8                      Creatinine          NaN  4032 or\\n4221 or\\n4223   \n",
              "9      Osmolality: Serum or urine          NaN                    4093   \n",
              "10      ONGOING MANAGEMENT BASKET          NaN                     NaN   \n",
              "11  PROCEDURE OR TEST DESCRIPTION          NaN  PROCEDURE OR TEST CODE   \n",
              "12       ECG –\\nElectrocardiogram          NaN  1232 or\\n1233 or\\n1236   \n",
              "13               Microalbuminuria          NaN           4261 or\\n4262   \n",
              "14      Urine analysis (dipstick)          NaN                    4188   \n",
              "15                LDL cholesterol          NaN                    4026   \n",
              "16                HDL cholesterol          NaN                    4028   \n",
              "17              Total cholesterol          NaN                    4027   \n",
              "18                  Triglycerides          NaN                    4147   \n",
              "19                     U & E only          NaN                    4171   \n",
              "\n",
              "    Unnamed: 13                             Unnamed: 14  Unnamed: 15  \\\n",
              "0           NaN  NUMBER OF PROCEDURES OR TESTS WE COVER          NaN   \n",
              "1           NaN                                       3          NaN   \n",
              "2           NaN                                       3          NaN   \n",
              "3           NaN                                     NaN          NaN   \n",
              "4           NaN                                     NaN          NaN   \n",
              "5           NaN                                     NaN          NaN   \n",
              "6           NaN  NUMBER OF PROCEDURES OR TESTS WE COVER          NaN   \n",
              "7           NaN                                       3          NaN   \n",
              "8           NaN                                       3          NaN   \n",
              "9           NaN                                       1          NaN   \n",
              "10          NaN                                     NaN          NaN   \n",
              "11          NaN  NUMBER OF PROCEDURES OR TESTS WE COVER          NaN   \n",
              "12          NaN                                       1          NaN   \n",
              "13          NaN                                       2          NaN   \n",
              "14          NaN                                       4          NaN   \n",
              "15          NaN                                       1          NaN   \n",
              "16          NaN                                       1          NaN   \n",
              "17          NaN                                       1          NaN   \n",
              "18          NaN                                       1          NaN   \n",
              "19          NaN                                       1          NaN   \n",
              "\n",
              "                                    Unnamed: 16  Unnamed: 17  Unnamed: 18  \n",
              "0      NUMBER OF SPECIALISTS WE COVER EACH YEAR          NaN          NaN  \n",
              "1                                             1          NaN          NaN  \n",
              "2                                           NaN          NaN          NaN  \n",
              "3                                           NaN          NaN          NaN  \n",
              "4                                           NaN          NaN          NaN  \n",
              "5                                           NaN          NaN          NaN  \n",
              "6      NUMBER OF SPECIALISTS WE COVER EACH YEAR          NaN          NaN  \n",
              "7                                             1          NaN          NaN  \n",
              "8                                           NaN          NaN          NaN  \n",
              "9                                           NaN          NaN          NaN  \n",
              "10                                          NaN          NaN          NaN  \n",
              "11     NUMBER OF SPECIALISTS WE COVER EACH YEAR          NaN          NaN  \n",
              "12  1 (Ophthal- mologist)\\n4 (Other Specialist)          NaN          NaN  \n",
              "13                                          NaN          NaN          NaN  \n",
              "14                                          NaN          NaN          NaN  \n",
              "15                                          NaN          NaN          NaN  \n",
              "16                                          NaN          NaN          NaN  \n",
              "17                                          NaN          NaN          NaN  \n",
              "18                                          NaN          NaN          NaN  \n",
              "19                                          NaN          NaN          NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-27772a76-79fb-4b68-872d-5acc40e37ea9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CONDITION</th>\n",
              "      <th>Unnamed: 1</th>\n",
              "      <th>DIAGNOSTIC BASKET</th>\n",
              "      <th>Unnamed: 3</th>\n",
              "      <th>Unnamed: 4</th>\n",
              "      <th>Unnamed: 5</th>\n",
              "      <th>Unnamed: 6</th>\n",
              "      <th>Unnamed: 7</th>\n",
              "      <th>Unnamed: 8</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>ONGOING MANAGEMENT BASKET</th>\n",
              "      <th>Unnamed: 11</th>\n",
              "      <th>Unnamed: 12</th>\n",
              "      <th>Unnamed: 13</th>\n",
              "      <th>Unnamed: 14</th>\n",
              "      <th>Unnamed: 15</th>\n",
              "      <th>Unnamed: 16</th>\n",
              "      <th>Unnamed: 17</th>\n",
              "      <th>Unnamed: 18</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>PROCEDURE OR TEST DESCRIPTION</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>PROCEDURE OR TEST CODE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NUMBER OF PROCEDURES OR TESTS WE COVER</td>\n",
              "      <td>NaN</td>\n",
              "      <td>PROCEDURE OR TEST DESCRIPTION</td>\n",
              "      <td>NaN</td>\n",
              "      <td>PROCEDURE OR TEST CODE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NUMBER OF PROCEDURES OR TESTS WE COVER</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NUMBER OF SPECIALISTS WE COVER EACH YEAR</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Addison’s disease</td>\n",
              "      <td>NaN</td>\n",
              "      <td>U &amp; E only</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4171</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>U &amp; E only</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4171</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Addison’s disease</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Creatinine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4032 or\\n4221 or\\n4223</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Creatinine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4032 or\\n4221 or\\n4223</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Addison’s disease</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Cortisol level</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4499</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Addison’s disease</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ACTH stimulation testing</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4523</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>CONDITION</td>\n",
              "      <td>NaN</td>\n",
              "      <td>DIAGNOSTIC BASKET</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ONGOING MANAGEMENT BASKET</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>CONDITION</td>\n",
              "      <td>NaN</td>\n",
              "      <td>PROCEDURE OR TEST DESCRIPTION</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>PROCEDURE OR TEST CODE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NUMBER OF PROCEDURES OR TESTS WE COVER</td>\n",
              "      <td>NaN</td>\n",
              "      <td>PROCEDURE OR TEST DESCRIPTION</td>\n",
              "      <td>NaN</td>\n",
              "      <td>PROCEDURE OR TEST CODE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NUMBER OF PROCEDURES OR TESTS WE COVER</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NUMBER OF SPECIALISTS WE COVER EACH YEAR</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Diabetes insipidus</td>\n",
              "      <td>NaN</td>\n",
              "      <td>U &amp; E only</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4171</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>U &amp; E only</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4171</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Diabetes insipidus</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Creatinine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4032 or\\n4221 or\\n4223</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Creatinine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4032 or\\n4221 or\\n4223</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Diabetes insipidus</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Osmolality: Serum or urine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4093</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Osmolality: Serum or urine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4093</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>CONDITION</td>\n",
              "      <td>NaN</td>\n",
              "      <td>DIAGNOSTIC BASKET</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ONGOING MANAGEMENT BASKET</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>CONDITION</td>\n",
              "      <td>NaN</td>\n",
              "      <td>PROCEDURE OR TEST DESCRIPTION</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>PROCEDURE OR TEST CODE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NUMBER OF PROCEDURES OR TESTS WE COVER</td>\n",
              "      <td>NaN</td>\n",
              "      <td>PROCEDURE OR TEST DESCRIPTION</td>\n",
              "      <td>NaN</td>\n",
              "      <td>PROCEDURE OR TEST CODE</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NUMBER OF PROCEDURES OR TESTS WE COVER</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NUMBER OF SPECIALISTS WE COVER EACH YEAR</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Diabetes mellitus type 1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ECG –\\nElectrocardiogram</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1232 or\\n1233 or\\n1236</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ECG –\\nElectrocardiogram</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1232 or\\n1233 or\\n1236</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1 (Ophthal- mologist)\\n4 (Other Specialist)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Diabetes mellitus type 1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Microalbuminuria</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4261 or\\n4262</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Microalbuminuria</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4261 or\\n4262</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Diabetes mellitus type 1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Urine analysis (dipstick)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4188</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Urine analysis (dipstick)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4188</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Diabetes mellitus type 1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>LDL cholesterol</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4026</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>LDL cholesterol</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4026</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Diabetes mellitus type 1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>HDL cholesterol</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4028</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>HDL cholesterol</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4028</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Diabetes mellitus type 1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Total cholesterol</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4027</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Total cholesterol</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4027</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Diabetes mellitus type 1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Triglycerides</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4147</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Triglycerides</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4147</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Diabetes mellitus type 1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>U &amp; E only</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4171</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>U &amp; E only</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4171</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-27772a76-79fb-4b68-872d-5acc40e37ea9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-27772a76-79fb-4b68-872d-5acc40e37ea9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-27772a76-79fb-4b68-872d-5acc40e37ea9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-7b1ad405-abff-4a2b-835d-abd91aa2eb78\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7b1ad405-abff-4a2b-835d-abd91aa2eb78')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-7b1ad405-abff-4a2b-835d-abd91aa2eb78 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(treatment_df\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"CONDITION\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"CONDITION\",\n          \"Diabetes mellitus type 1\",\n          \"Addison\\u2019s disease\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DIAGNOSTIC BASKET\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 14,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 6\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 13,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 7\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 8\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 9\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ONGOING MANAGEMENT BASKET\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 12,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 11\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 12\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 11,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 13\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 14\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 15\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 16\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 17\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 18\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6d0101ce"
      },
      "source": [
        "**Reasoning**:\n",
        "The inspection of `treatment_df` reveals that the first few rows contain header information that is not part of the data and is interfering with the fill-forward operation and subsequently the merge. Also, there are header rows repeated within the dataframe. Need to remove these header rows and then re-apply the fill-forward before merging again.\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "3a596d47",
        "outputId": "f1ae9a9d-59cc-4a40-d703-e837fdff31cf"
      },
      "source": [
        "# Drop the first row and rows where 'CONDITION' is 'CONDITION' as these are headers\n",
        "treatment_df = treatment_df.iloc[1:].copy()\n",
        "treatment_df = treatment_df[treatment_df['CONDITION'] != 'CONDITION'].copy()\n",
        "\n",
        "# Re-apply fill forward on the cleaned DataFrame\n",
        "treatment_df['CONDITION'] = treatment_df['CONDITION'].fillna(method='ffill')\n",
        "\n",
        "# Clean 'CHRONIC CONDITIONS' in disorders_df to match the format in treatment_df if necessary\n",
        "disorders_df['CHRONIC CONDITIONS'] = disorders_df['CHRONIC CONDITIONS'].str.strip()\n",
        "treatment_df['CONDITION'] = treatment_df['CONDITION'].str.strip()\n",
        "\n",
        "# Perform the merge again\n",
        "merged_df = pd.merge(disorders_df, treatment_df, left_on='CHRONIC CONDITIONS', right_on='CONDITION', how='left')\n",
        "\n",
        "display(merged_df.head())\n",
        "display(merged_df.info())"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/tmp/ipython-input-2387583347.py:6: FutureWarning: Series.fillna with 'method' is deprecated and will raise in a future version. Use obj.ffill() or obj.bfill() instead.\n",
            "  treatment_df['CONDITION'] = treatment_df['CONDITION'].fillna(method='ffill')\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "         CHRONIC CONDITIONS Unnamed: 1_x  \\\n",
              "0         Addison's Disease        E27.1   \n",
              "1        Diabetes Insipidus        E23.2   \n",
              "2        Diabetes Insipidus        N25.1   \n",
              "3  Diabetes Mellitus Type 1        G59.0   \n",
              "4  Diabetes Mellitus Type 1        G63.2   \n",
              "\n",
              "                                          Unnamed: 2  Unnamed: 3_x  \\\n",
              "0               Primary adrenocortical insufficiency           NaN   \n",
              "1                                 Diabetes insipidus           NaN   \n",
              "2                     Nephrogenic diabetes insipidus           NaN   \n",
              "3  Diabetic mononeuropathy (E10-E14+ with common ...           NaN   \n",
              "4  Diabetic polyneuropathy (E10-E14+ with common ...           NaN   \n",
              "\n",
              "   Unnamed: 4_x  Unnamed: 5_x CONDITION  Unnamed: 1_y DIAGNOSTIC BASKET  \\\n",
              "0           NaN           NaN       NaN           NaN               NaN   \n",
              "1           NaN           NaN       NaN           NaN               NaN   \n",
              "2           NaN           NaN       NaN           NaN               NaN   \n",
              "3           NaN           NaN       NaN           NaN               NaN   \n",
              "4           NaN           NaN       NaN           NaN               NaN   \n",
              "\n",
              "   Unnamed: 3_y  ...  Unnamed: 9  ONGOING MANAGEMENT BASKET Unnamed: 11  \\\n",
              "0           NaN  ...         NaN                        NaN         NaN   \n",
              "1           NaN  ...         NaN                        NaN         NaN   \n",
              "2           NaN  ...         NaN                        NaN         NaN   \n",
              "3           NaN  ...         NaN                        NaN         NaN   \n",
              "4           NaN  ...         NaN                        NaN         NaN   \n",
              "\n",
              "   Unnamed: 12 Unnamed: 13  Unnamed: 14 Unnamed: 15  Unnamed: 16 Unnamed: 17  \\\n",
              "0          NaN         NaN          NaN         NaN          NaN         NaN   \n",
              "1          NaN         NaN          NaN         NaN          NaN         NaN   \n",
              "2          NaN         NaN          NaN         NaN          NaN         NaN   \n",
              "3          NaN         NaN          NaN         NaN          NaN         NaN   \n",
              "4          NaN         NaN          NaN         NaN          NaN         NaN   \n",
              "\n",
              "   Unnamed: 18  \n",
              "0          NaN  \n",
              "1          NaN  \n",
              "2          NaN  \n",
              "3          NaN  \n",
              "4          NaN  \n",
              "\n",
              "[5 rows x 25 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-89dd70df-78a8-4265-b7dd-f67a6a405f6a\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CHRONIC CONDITIONS</th>\n",
              "      <th>Unnamed: 1_x</th>\n",
              "      <th>Unnamed: 2</th>\n",
              "      <th>Unnamed: 3_x</th>\n",
              "      <th>Unnamed: 4_x</th>\n",
              "      <th>Unnamed: 5_x</th>\n",
              "      <th>CONDITION</th>\n",
              "      <th>Unnamed: 1_y</th>\n",
              "      <th>DIAGNOSTIC BASKET</th>\n",
              "      <th>Unnamed: 3_y</th>\n",
              "      <th>...</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>ONGOING MANAGEMENT BASKET</th>\n",
              "      <th>Unnamed: 11</th>\n",
              "      <th>Unnamed: 12</th>\n",
              "      <th>Unnamed: 13</th>\n",
              "      <th>Unnamed: 14</th>\n",
              "      <th>Unnamed: 15</th>\n",
              "      <th>Unnamed: 16</th>\n",
              "      <th>Unnamed: 17</th>\n",
              "      <th>Unnamed: 18</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Addison's Disease</td>\n",
              "      <td>E27.1</td>\n",
              "      <td>Primary adrenocortical insufficiency</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Diabetes Insipidus</td>\n",
              "      <td>E23.2</td>\n",
              "      <td>Diabetes insipidus</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Diabetes Insipidus</td>\n",
              "      <td>N25.1</td>\n",
              "      <td>Nephrogenic diabetes insipidus</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Diabetes Mellitus Type 1</td>\n",
              "      <td>G59.0</td>\n",
              "      <td>Diabetic mononeuropathy (E10-E14+ with common ...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Diabetes Mellitus Type 1</td>\n",
              "      <td>G63.2</td>\n",
              "      <td>Diabetic polyneuropathy (E10-E14+ with common ...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 25 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-89dd70df-78a8-4265-b7dd-f67a6a405f6a')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-89dd70df-78a8-4265-b7dd-f67a6a405f6a button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-89dd70df-78a8-4265-b7dd-f67a6a405f6a');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-d0efda80-7efb-43ed-8153-40d1b93ef224\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d0efda80-7efb-43ed-8153-40d1b93ef224')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-d0efda80-7efb-43ed-8153-40d1b93ef224 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 187 entries, 0 to 186\n",
            "Data columns (total 25 columns):\n",
            " #   Column                     Non-Null Count  Dtype  \n",
            "---  ------                     --------------  -----  \n",
            " 0   CHRONIC CONDITIONS         187 non-null    object \n",
            " 1   Unnamed: 1_x               187 non-null    object \n",
            " 2   Unnamed: 2                 187 non-null    object \n",
            " 3   Unnamed: 3_x               0 non-null      float64\n",
            " 4   Unnamed: 4_x               0 non-null      float64\n",
            " 5   Unnamed: 5_x               0 non-null      float64\n",
            " 6   CONDITION                  57 non-null     object \n",
            " 7   Unnamed: 1_y               0 non-null      float64\n",
            " 8   DIAGNOSTIC BASKET          57 non-null     object \n",
            " 9   Unnamed: 3_y               0 non-null      float64\n",
            " 10  Unnamed: 4_y               0 non-null      float64\n",
            " 11  Unnamed: 5_y               0 non-null      float64\n",
            " 12  Unnamed: 6                 57 non-null     object \n",
            " 13  Unnamed: 7                 0 non-null      float64\n",
            " 14  Unnamed: 8                 57 non-null     object \n",
            " 15  Unnamed: 9                 0 non-null      float64\n",
            " 16  ONGOING MANAGEMENT BASKET  38 non-null     object \n",
            " 17  Unnamed: 11                0 non-null      float64\n",
            " 18  Unnamed: 12                38 non-null     object \n",
            " 19  Unnamed: 13                0 non-null      float64\n",
            " 20  Unnamed: 14                38 non-null     object \n",
            " 21  Unnamed: 15                0 non-null      float64\n",
            " 22  Unnamed: 16                19 non-null     object \n",
            " 23  Unnamed: 17                0 non-null      float64\n",
            " 24  Unnamed: 18                0 non-null      float64\n",
            "dtypes: float64(14), object(11)\n",
            "memory usage: 36.7+ KB\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "None"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "37d7f2c3"
      },
      "source": [
        "**Reasoning**:\n",
        "The previous attempt to remove headers and fill forward didn't fully resolve the issue, as the merged dataframe still shows many nulls in the 'CONDITION' column. A closer look at the `treatment_df` head showed that there might be other rows with 'CONDITION' as the value in the 'CONDITION' column that are not the very first row. The next step is to re-examine the `treatment_df` after the attempted cleaning to understand the current state and identify why the fill forward is not working as expected across all relevant rows.\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "G1YH16H9J0U_",
        "outputId": "018a6cfb-f8bd-4dad-dbeb-9142639dc561"
      },
      "source": [
        "display(treatment_df.head(20))"
      ],
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "                   CONDITION  Unnamed: 1           DIAGNOSTIC BASKET  \\\n",
              "1          Addison’s disease         NaN                  U & E only   \n",
              "2          Addison’s disease         NaN                  Creatinine   \n",
              "3          Addison’s disease         NaN              Cortisol level   \n",
              "4          Addison’s disease         NaN    ACTH stimulation testing   \n",
              "7         Diabetes insipidus         NaN                  U & E only   \n",
              "8         Diabetes insipidus         NaN                  Creatinine   \n",
              "9         Diabetes insipidus         NaN  Osmolality: Serum or urine   \n",
              "12  Diabetes mellitus type 1         NaN    ECG –\\nElectrocardiogram   \n",
              "13  Diabetes mellitus type 1         NaN            Microalbuminuria   \n",
              "14  Diabetes mellitus type 1         NaN   Urine analysis (dipstick)   \n",
              "15  Diabetes mellitus type 1         NaN             LDL cholesterol   \n",
              "16  Diabetes mellitus type 1         NaN             HDL cholesterol   \n",
              "17  Diabetes mellitus type 1         NaN           Total cholesterol   \n",
              "18  Diabetes mellitus type 1         NaN               Triglycerides   \n",
              "19  Diabetes mellitus type 1         NaN                  U & E only   \n",
              "20  Diabetes mellitus type 1         NaN            Serum creatinine   \n",
              "21  Diabetes mellitus type 1         NaN            Urine creatinine   \n",
              "22  Diabetes mellitus type 1         NaN      Two-hour glucose- OGTT   \n",
              "23  Diabetes mellitus type 1         NaN   Glucose –\\nrandom/fasting   \n",
              "24  Diabetes mellitus type 1         NaN                         NaN   \n",
              "\n",
              "    Unnamed: 3  Unnamed: 4  Unnamed: 5              Unnamed: 6  Unnamed: 7  \\\n",
              "1          NaN         NaN         NaN                    4171         NaN   \n",
              "2          NaN         NaN         NaN  4032 or\\n4221 or\\n4223         NaN   \n",
              "3          NaN         NaN         NaN                    4499         NaN   \n",
              "4          NaN         NaN         NaN                    4523         NaN   \n",
              "7          NaN         NaN         NaN                    4171         NaN   \n",
              "8          NaN         NaN         NaN  4032 or\\n4221 or\\n4223         NaN   \n",
              "9          NaN         NaN         NaN                    4093         NaN   \n",
              "12         NaN         NaN         NaN  1232 or\\n1233 or\\n1236         NaN   \n",
              "13         NaN         NaN         NaN           4261 or\\n4262         NaN   \n",
              "14         NaN         NaN         NaN                    4188         NaN   \n",
              "15         NaN         NaN         NaN                    4026         NaN   \n",
              "16         NaN         NaN         NaN                    4028         NaN   \n",
              "17         NaN         NaN         NaN                    4027         NaN   \n",
              "18         NaN         NaN         NaN                    4147         NaN   \n",
              "19         NaN         NaN         NaN                    4171         NaN   \n",
              "20         NaN         NaN         NaN           4032 or\\n4223         NaN   \n",
              "21         NaN         NaN         NaN                    4221         NaN   \n",
              "22         NaN         NaN         NaN                    4049         NaN   \n",
              "23         NaN         NaN         NaN                    4057         NaN   \n",
              "24         NaN         NaN         NaN                     NaN         NaN   \n",
              "\n",
              "   Unnamed: 8  Unnamed: 9                          ONGOING MANAGEMENT BASKET  \\\n",
              "1           1         NaN                                         U & E only   \n",
              "2           1         NaN                                         Creatinine   \n",
              "3           1         NaN                                                NaN   \n",
              "4           1         NaN                                                NaN   \n",
              "7           1         NaN                                         U & E only   \n",
              "8           1         NaN                                         Creatinine   \n",
              "9           1         NaN                         Osmolality: Serum or urine   \n",
              "12          1         NaN                           ECG –\\nElectrocardiogram   \n",
              "13          1         NaN                                   Microalbuminuria   \n",
              "14          1         NaN                          Urine analysis (dipstick)   \n",
              "15          1         NaN                                    LDL cholesterol   \n",
              "16          1         NaN                                    HDL cholesterol   \n",
              "17          1         NaN                                  Total cholesterol   \n",
              "18          1         NaN                                      Triglycerides   \n",
              "19          1         NaN                                         U & E only   \n",
              "20          1         NaN                                   Serum creatinine   \n",
              "21          1         NaN                                   Urine creatinine   \n",
              "22          1         NaN                                              HbA1c   \n",
              "23          1         NaN                                          Tonometry   \n",
              "24        NaN         NaN  Basic capital equipped in own rooms by ophthal...   \n",
              "\n",
              "    Unnamed: 11             Unnamed: 12  Unnamed: 13 Unnamed: 14  Unnamed: 15  \\\n",
              "1           NaN                    4171          NaN           3          NaN   \n",
              "2           NaN  4032 or\\n4221 or\\n4223          NaN           3          NaN   \n",
              "3           NaN                     NaN          NaN         NaN          NaN   \n",
              "4           NaN                     NaN          NaN         NaN          NaN   \n",
              "7           NaN                    4171          NaN           3          NaN   \n",
              "8           NaN  4032 or\\n4221 or\\n4223          NaN           3          NaN   \n",
              "9           NaN                    4093          NaN           1          NaN   \n",
              "12          NaN  1232 or\\n1233 or\\n1236          NaN           1          NaN   \n",
              "13          NaN           4261 or\\n4262          NaN           2          NaN   \n",
              "14          NaN                    4188          NaN           4          NaN   \n",
              "15          NaN                    4026          NaN           1          NaN   \n",
              "16          NaN                    4028          NaN           1          NaN   \n",
              "17          NaN                    4027          NaN           1          NaN   \n",
              "18          NaN                    4147          NaN           1          NaN   \n",
              "19          NaN                    4171          NaN           1          NaN   \n",
              "20          NaN           4032 or\\n4223          NaN           1          NaN   \n",
              "21          NaN                    4221          NaN           1          NaN   \n",
              "22          NaN                    4064          NaN           4          NaN   \n",
              "23          NaN                    3014          NaN           1          NaN   \n",
              "24          NaN                    3009          NaN           1          NaN   \n",
              "\n",
              "                                    Unnamed: 16  Unnamed: 17  Unnamed: 18  \n",
              "1                                             1          NaN          NaN  \n",
              "2                                           NaN          NaN          NaN  \n",
              "3                                           NaN          NaN          NaN  \n",
              "4                                           NaN          NaN          NaN  \n",
              "7                                             1          NaN          NaN  \n",
              "8                                           NaN          NaN          NaN  \n",
              "9                                           NaN          NaN          NaN  \n",
              "12  1 (Ophthal- mologist)\\n4 (Other Specialist)          NaN          NaN  \n",
              "13                                          NaN          NaN          NaN  \n",
              "14                                          NaN          NaN          NaN  \n",
              "15                                          NaN          NaN          NaN  \n",
              "16                                          NaN          NaN          NaN  \n",
              "17                                          NaN          NaN          NaN  \n",
              "18                                          NaN          NaN          NaN  \n",
              "19                                          NaN          NaN          NaN  \n",
              "20                                          NaN          NaN          NaN  \n",
              "21                                          NaN          NaN          NaN  \n",
              "22                                          NaN          NaN          NaN  \n",
              "23                                          NaN          NaN          NaN  \n",
              "24                                          NaN          NaN          NaN  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5a2b23d2-737c-4d5a-ad71-ec085458564e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CONDITION</th>\n",
              "      <th>Unnamed: 1</th>\n",
              "      <th>DIAGNOSTIC BASKET</th>\n",
              "      <th>Unnamed: 3</th>\n",
              "      <th>Unnamed: 4</th>\n",
              "      <th>Unnamed: 5</th>\n",
              "      <th>Unnamed: 6</th>\n",
              "      <th>Unnamed: 7</th>\n",
              "      <th>Unnamed: 8</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>ONGOING MANAGEMENT BASKET</th>\n",
              "      <th>Unnamed: 11</th>\n",
              "      <th>Unnamed: 12</th>\n",
              "      <th>Unnamed: 13</th>\n",
              "      <th>Unnamed: 14</th>\n",
              "      <th>Unnamed: 15</th>\n",
              "      <th>Unnamed: 16</th>\n",
              "      <th>Unnamed: 17</th>\n",
              "      <th>Unnamed: 18</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Addison’s disease</td>\n",
              "      <td>NaN</td>\n",
              "      <td>U &amp; E only</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4171</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>U &amp; E only</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4171</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Addison’s disease</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Creatinine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4032 or\\n4221 or\\n4223</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Creatinine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4032 or\\n4221 or\\n4223</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Addison’s disease</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Cortisol level</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4499</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Addison’s disease</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ACTH stimulation testing</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4523</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Diabetes insipidus</td>\n",
              "      <td>NaN</td>\n",
              "      <td>U &amp; E only</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4171</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>U &amp; E only</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4171</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Diabetes insipidus</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Creatinine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4032 or\\n4221 or\\n4223</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Creatinine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4032 or\\n4221 or\\n4223</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Diabetes insipidus</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Osmolality: Serum or urine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4093</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Osmolality: Serum or urine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4093</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Diabetes mellitus type 1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ECG –\\nElectrocardiogram</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1232 or\\n1233 or\\n1236</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ECG –\\nElectrocardiogram</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1232 or\\n1233 or\\n1236</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1 (Ophthal- mologist)\\n4 (Other Specialist)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Diabetes mellitus type 1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Microalbuminuria</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4261 or\\n4262</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Microalbuminuria</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4261 or\\n4262</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>Diabetes mellitus type 1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Urine analysis (dipstick)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4188</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Urine analysis (dipstick)</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4188</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>Diabetes mellitus type 1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>LDL cholesterol</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4026</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>LDL cholesterol</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4026</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>Diabetes mellitus type 1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>HDL cholesterol</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4028</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>HDL cholesterol</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4028</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>Diabetes mellitus type 1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Total cholesterol</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4027</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Total cholesterol</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4027</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>Diabetes mellitus type 1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Triglycerides</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4147</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Triglycerides</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4147</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>Diabetes mellitus type 1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>U &amp; E only</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4171</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>U &amp; E only</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4171</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>Diabetes mellitus type 1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Serum creatinine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4032 or\\n4223</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Serum creatinine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4032 or\\n4223</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>Diabetes mellitus type 1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Urine creatinine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4221</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Urine creatinine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4221</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>Diabetes mellitus type 1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Two-hour glucose- OGTT</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4049</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>HbA1c</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4064</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>Diabetes mellitus type 1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Glucose –\\nrandom/fasting</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4057</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Tonometry</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3014</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>Diabetes mellitus type 1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Basic capital equipped in own rooms by ophthal...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3009</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5a2b23d2-737c-4d5a-ad71-ec085458564e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5a2b23d2-737c-4d5a-ad71-ec085458564e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5a2b23d2-737c-4d5a-ad71-ec085458564e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-7653e0dd-062a-45b1-a005-146ba5b2b174\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7653e0dd-062a-45b1-a005-146ba5b2b174')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-7653e0dd-062a-45b1-a005-146ba5b2b174 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"display(treatment_df\",\n  \"rows\": 20,\n  \"fields\": [\n    {\n      \"column\": \"CONDITION\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Addison\\u2019s disease\",\n          \"Diabetes insipidus\",\n          \"Diabetes mellitus type 1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DIAGNOSTIC BASKET\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 16,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 3\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 4\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 5\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 6\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 16,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 7\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 8\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 9\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ONGOING MANAGEMENT BASKET\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 15,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 11\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 12\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 15,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 13\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 14\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 15\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 16\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 17\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Unnamed: 18\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": null,\n        \"max\": null,\n        \"num_unique_values\": 0,\n        \"samples\": [],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "3d85702f"
      },
      "source": [
        "**Reasoning**:\n",
        "The fill forward appears to be working correctly in `treatment_df` after removing the initial header rows and rows where 'CONDITION' is 'CONDITION'. The issue might be with the merge key values not matching exactly between `disorders_df` and `treatment_df`. I will check for unique values in the 'CHRONIC CONDITIONS' column of `disorders_df` and the 'CONDITION' column of `treatment_df` to identify any discrepancies in spelling or formatting that might prevent a successful merge.\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fa5d4f3b",
        "outputId": "5ad08ac5-888c-4755-e074-dd3c65355977"
      },
      "source": [
        "print(\"Unique values in disorders_df['CHRONIC CONDITIONS']:\")\n",
        "print(disorders_df['CHRONIC CONDITIONS'].unique())\n",
        "print(\"\\nUnique values in treatment_df['CONDITION']:\")\n",
        "print(treatment_df['CONDITION'].unique())"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Unique values in disorders_df['CHRONIC CONDITIONS']:\n",
            "[\"Addison's Disease\" 'Diabetes Insipidus' 'Diabetes Mellitus Type 1'\n",
            " 'Diabetes Mellitus Type 2' 'Hypothyroidism']\n",
            "\n",
            "Unique values in treatment_df['CONDITION']:\n",
            "['Addison’s disease' 'Diabetes insipidus' 'Diabetes mellitus type 1'\n",
            " 'Diabetes mellitus type 2' 'Hypothyroidism']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "49357ab2"
      },
      "source": [
        "**Reasoning**:\n",
        "The unique values show a discrepancy in the condition names between the two dataframes, specifically in the presence of an apostrophe in `disorders_df` vs. a right single quotation mark in `treatment_df` for \"Addison's Disease\" and casing differences for \"Diabetes Insipidus\" and \"Diabetes Mellitus Type 1\". To ensure a successful merge, these names need to be standardized. I will replace the right single quotation mark with an apostrophe and convert the condition names to lowercase in `treatment_df` to match `disorders_df`.\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "b7276bb4",
        "outputId": "75e0e6bf-5406-4789-ba57-9c9e35cef56b"
      },
      "source": [
        "treatment_df['CONDITION'] = treatment_df['CONDITION'].str.replace('’', \"'\")\n",
        "treatment_df['CONDITION'] = treatment_df['CONDITION'].str.lower()\n",
        "disorders_df['CHRONIC CONDITIONS'] = disorders_df['CHRONIC CONDITIONS'].str.lower()\n",
        "\n",
        "merged_df = pd.merge(disorders_df, treatment_df, left_on='CHRONIC CONDITIONS', right_on='CONDITION', how='left')\n",
        "\n",
        "display(merged_df.head())\n",
        "display(merged_df.info())"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "   CHRONIC CONDITIONS Unnamed: 1_x                            Unnamed: 2  \\\n",
              "0   addison's disease        E27.1  Primary adrenocortical insufficiency   \n",
              "1   addison's disease        E27.1  Primary adrenocortical insufficiency   \n",
              "2   addison's disease        E27.1  Primary adrenocortical insufficiency   \n",
              "3   addison's disease        E27.1  Primary adrenocortical insufficiency   \n",
              "4  diabetes insipidus        E23.2                    Diabetes insipidus   \n",
              "\n",
              "   Unnamed: 3_x  Unnamed: 4_x  Unnamed: 5_x           CONDITION  Unnamed: 1_y  \\\n",
              "0           NaN           NaN           NaN   addison's disease           NaN   \n",
              "1           NaN           NaN           NaN   addison's disease           NaN   \n",
              "2           NaN           NaN           NaN   addison's disease           NaN   \n",
              "3           NaN           NaN           NaN   addison's disease           NaN   \n",
              "4           NaN           NaN           NaN  diabetes insipidus           NaN   \n",
              "\n",
              "          DIAGNOSTIC BASKET  Unnamed: 3_y  ...  Unnamed: 9  \\\n",
              "0                U & E only           NaN  ...         NaN   \n",
              "1                Creatinine           NaN  ...         NaN   \n",
              "2            Cortisol level           NaN  ...         NaN   \n",
              "3  ACTH stimulation testing           NaN  ...         NaN   \n",
              "4                U & E only           NaN  ...         NaN   \n",
              "\n",
              "   ONGOING MANAGEMENT BASKET Unnamed: 11             Unnamed: 12 Unnamed: 13  \\\n",
              "0                 U & E only         NaN                    4171         NaN   \n",
              "1                 Creatinine         NaN  4032 or\\n4221 or\\n4223         NaN   \n",
              "2                        NaN         NaN                     NaN         NaN   \n",
              "3                        NaN         NaN                     NaN         NaN   \n",
              "4                 U & E only         NaN                    4171         NaN   \n",
              "\n",
              "   Unnamed: 14 Unnamed: 15  Unnamed: 16 Unnamed: 17  Unnamed: 18  \n",
              "0            3         NaN            1         NaN          NaN  \n",
              "1            3         NaN          NaN         NaN          NaN  \n",
              "2          NaN         NaN          NaN         NaN          NaN  \n",
              "3          NaN         NaN          NaN         NaN          NaN  \n",
              "4            3         NaN            1         NaN          NaN  \n",
              "\n",
              "[5 rows x 25 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7a1103de-9171-433b-9d73-ae2fe55534de\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>CHRONIC CONDITIONS</th>\n",
              "      <th>Unnamed: 1_x</th>\n",
              "      <th>Unnamed: 2</th>\n",
              "      <th>Unnamed: 3_x</th>\n",
              "      <th>Unnamed: 4_x</th>\n",
              "      <th>Unnamed: 5_x</th>\n",
              "      <th>CONDITION</th>\n",
              "      <th>Unnamed: 1_y</th>\n",
              "      <th>DIAGNOSTIC BASKET</th>\n",
              "      <th>Unnamed: 3_y</th>\n",
              "      <th>...</th>\n",
              "      <th>Unnamed: 9</th>\n",
              "      <th>ONGOING MANAGEMENT BASKET</th>\n",
              "      <th>Unnamed: 11</th>\n",
              "      <th>Unnamed: 12</th>\n",
              "      <th>Unnamed: 13</th>\n",
              "      <th>Unnamed: 14</th>\n",
              "      <th>Unnamed: 15</th>\n",
              "      <th>Unnamed: 16</th>\n",
              "      <th>Unnamed: 17</th>\n",
              "      <th>Unnamed: 18</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>addison's disease</td>\n",
              "      <td>E27.1</td>\n",
              "      <td>Primary adrenocortical insufficiency</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>addison's disease</td>\n",
              "      <td>NaN</td>\n",
              "      <td>U &amp; E only</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>U &amp; E only</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4171</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>addison's disease</td>\n",
              "      <td>E27.1</td>\n",
              "      <td>Primary adrenocortical insufficiency</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>addison's disease</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Creatinine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Creatinine</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4032 or\\n4221 or\\n4223</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>addison's disease</td>\n",
              "      <td>E27.1</td>\n",
              "      <td>Primary adrenocortical insufficiency</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>addison's disease</td>\n",
              "      <td>NaN</td>\n",
              "      <td>Cortisol level</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>addison's disease</td>\n",
              "      <td>E27.1</td>\n",
              "      <td>Primary adrenocortical insufficiency</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>addison's disease</td>\n",
              "      <td>NaN</td>\n",
              "      <td>ACTH stimulation testing</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>diabetes insipidus</td>\n",
              "      <td>E23.2</td>\n",
              "      <td>Diabetes insipidus</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>diabetes insipidus</td>\n",
              "      <td>NaN</td>\n",
              "      <td>U &amp; E only</td>\n",
              "      <td>NaN</td>\n",
              "      <td>...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>U &amp; E only</td>\n",
              "      <td>NaN</td>\n",
              "      <td>4171</td>\n",
              "      <td>NaN</td>\n",
              "      <td>3</td>\n",
              "      <td>NaN</td>\n",
              "      <td>1</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 25 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7a1103de-9171-433b-9d73-ae2fe55534de')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7a1103de-9171-433b-9d73-ae2fe55534de button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7a1103de-9171-433b-9d73-ae2fe55534de');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "    <div id=\"df-f08a0eb7-fd17-48da-a2b2-d9dc15b69086\">\n",
              "      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f08a0eb7-fd17-48da-a2b2-d9dc15b69086')\"\n",
              "                title=\"Suggest charts\"\n",
              "                style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "      </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "      <script>\n",
              "        async function quickchart(key) {\n",
              "          const quickchartButtonEl =\n",
              "            document.querySelector('#' + key + ' button');\n",
              "          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "          quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "          try {\n",
              "            const charts = await google.colab.kernel.invokeFunction(\n",
              "                'suggestCharts', [key], {});\n",
              "          } catch (error) {\n",
              "            console.error('Error during call to suggestCharts:', error);\n",
              "          }\n",
              "          quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "        }\n",
              "        (() => {\n",
              "          let quickchartButtonEl =\n",
              "            document.querySelector('#df-f08a0eb7-fd17-48da-a2b2-d9dc15b69086 button');\n",
              "          quickchartButtonEl.style.display =\n",
              "            google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "        })();\n",
              "      </script>\n",
              "    </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {}
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 2309 entries, 0 to 2308\n",
            "Data columns (total 25 columns):\n",
            " #   Column                     Non-Null Count  Dtype  \n",
            "---  ------                     --------------  -----  \n",
            " 0   CHRONIC CONDITIONS         2309 non-null   object \n",
            " 1   Unnamed: 1_x               2309 non-null   object \n",
            " 2   Unnamed: 2                 2309 non-null   object \n",
            " 3   Unnamed: 3_x               0 non-null      float64\n",
            " 4   Unnamed: 4_x               0 non-null      float64\n",
            " 5   Unnamed: 5_x               0 non-null      float64\n",
            " 6   CONDITION                  2309 non-null   object \n",
            " 7   Unnamed: 1_y               0 non-null      float64\n",
            " 8   DIAGNOSTIC BASKET          1591 non-null   object \n",
            " 9   Unnamed: 3_y               0 non-null      float64\n",
            " 10  Unnamed: 4_y               0 non-null      float64\n",
            " 11  Unnamed: 5_y               0 non-null      float64\n",
            " 12  Unnamed: 6                 1591 non-null   object \n",
            " 13  Unnamed: 7                 0 non-null      float64\n",
            " 14  Unnamed: 8                 1591 non-null   object \n",
            " 15  Unnamed: 9                 0 non-null      float64\n",
            " 16  ONGOING MANAGEMENT BASKET  2288 non-null   object \n",
            " 17  Unnamed: 11                0 non-null      float64\n",
            " 18  Unnamed: 12                2288 non-null   object \n",
            " 19  Unnamed: 13                0 non-null      float64\n",
            " 20  Unnamed: 14                2161 non-null   object \n",
            " 21  Unnamed: 15                0 non-null      float64\n",
            " 22  Unnamed: 16                149 non-null    object \n",
            " 23  Unnamed: 17                0 non-null      float64\n",
            " 24  Unnamed: 18                0 non-null      float64\n",
            "dtypes: float64(14), object(11)\n",
            "memory usage: 451.1+ KB\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "None"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "19e033c4"
      },
      "source": [
        "## Structure data\n",
        "\n",
        "### Subtask:\n",
        "Organize the merged data to clearly separate the diagnostic and ongoing management baskets for each condition. This might involve creating nested structures or separate columns for each basket.\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "643664ec"
      },
      "source": [
        "**Reasoning**:\n",
        "Identify the columns corresponding to the diagnostic and ongoing management baskets based on the `treatment_df` and then consolidate the information for each condition into separate lists within a new structure.\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 561
        },
        "id": "f2fed198",
        "outputId": "cb8528a6-d155-4789-feb7-3a5bbecf386d"
      },
      "source": [
        "# Identify the columns for diagnostic and ongoing management baskets\n",
        "# Based on treatment_df.head(), columns from 'DIAGNOSTIC BASKET' to 'Unnamed: 15' seem to be diagnostic,\n",
        "# and columns from 'Unnamed: 16' onwards seem to be ongoing management.\n",
        "# Let's confirm by looking at the columns of merged_df\n",
        "# display(merged_df.columns)\n",
        "\n",
        "# Based on manual inspection and the previous head outputs, the columns from 'DIAGNOSTIC BASKET' (which is actually 'Unnamed: 2_y' after merge)\n",
        "# up to 'Unnamed: 15' in the merged_df correspond to the Diagnostic Basket.\n",
        "# The columns from 'Unnamed: 16' onwards correspond to the Ongoing Management Basket.\n",
        "\n",
        "diagnostic_cols = merged_df.columns[merged_df.columns.get_loc('Unnamed: 2_y'):merged_df.columns.get_loc('Unnamed: 15') + 1]\n",
        "ongoing_cols = merged_df.columns[merged_df.columns.get_loc('Unnamed: 16'):]\n",
        "\n",
        "\n",
        "# Create a dictionary to store the organized data\n",
        "organized_data = {}\n",
        "\n",
        "# Iterate through each unique condition\n",
        "for condition in merged_df['CHRONIC CONDITIONS'].unique():\n",
        "    condition_df = merged_df[merged_df['CHRONIC CONDITIONS'] == condition]\n",
        "\n",
        "    # Consolidate diagnostic basket information\n",
        "    diagnostic_basket = []\n",
        "    for col in diagnostic_cols:\n",
        "        # Get unique non-null values from the column for this condition\n",
        "        values = condition_df[col].dropna().unique().tolist()\n",
        "        diagnostic_basket.extend(values)\n",
        "\n",
        "    # Consolidate ongoing management basket information\n",
        "    ongoing_management_basket = []\n",
        "    for col in ongoing_cols:\n",
        "        # Get unique non-null values from the column for this condition\n",
        "        values = condition_df[col].dropna().unique().tolist()\n",
        "        ongoing_management_basket.extend(values)\n",
        "\n",
        "    # Store in the organized_data dictionary\n",
        "    organized_data[condition] = {\n",
        "        'diagnostic_basket': diagnostic_basket,\n",
        "        'ongoing_management_basket': ongoing_management_basket\n",
        "    }\n",
        "\n",
        "# Display the organized data for a few conditions to verify\n",
        "import json\n",
        "print(json.dumps(dict(list(organized_data.items())[:3]), indent=4))"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "error",
          "ename": "KeyError",
          "evalue": "'Unnamed: 2_y'",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m/usr/local/lib/python3.12/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3804\u001b[0m         \u001b[0;32mtry\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3805\u001b[0;31m             \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_engine\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcasted_key\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3806\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mKeyError\u001b[0m \u001b[0;32mas\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32mindex.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mindex.pyx\u001b[0m in \u001b[0;36mpandas._libs.index.IndexEngine.get_loc\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;32mpandas/_libs/hashtable_class_helper.pxi\u001b[0m in \u001b[0;36mpandas._libs.hashtable.PyObjectHashTable.get_item\u001b[0;34m()\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: 'Unnamed: 2_y'",
            "\nThe above exception was the direct cause of the following exception:\n",
            "\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)",
            "\u001b[0;32m/tmp/ipython-input-1064192238.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      9\u001b[0m \u001b[0;31m# The columns from 'Unnamed: 16' onwards correspond to the Ongoing Management Basket.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     10\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 11\u001b[0;31m \u001b[0mdiagnostic_cols\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmerged_df\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmerged_df\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Unnamed: 2_y'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0mmerged_df\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Unnamed: 15'\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     12\u001b[0m \u001b[0mongoing_cols\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmerged_df\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mmerged_df\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_loc\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Unnamed: 16'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.12/dist-packages/pandas/core/indexes/base.py\u001b[0m in \u001b[0;36mget_loc\u001b[0;34m(self, key)\u001b[0m\n\u001b[1;32m   3810\u001b[0m             ):\n\u001b[1;32m   3811\u001b[0m                 \u001b[0;32mraise\u001b[0m \u001b[0mInvalidIndexError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 3812\u001b[0;31m             \u001b[0;32mraise\u001b[0m \u001b[0mKeyError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mkey\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   3813\u001b[0m         \u001b[0;32mexcept\u001b[0m \u001b[0mTypeError\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   3814\u001b[0m             \u001b[0;31m# If we have a listlike key, _check_indexing_error will raise\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mKeyError\u001b[0m: 'Unnamed: 2_y'"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "17884efc"
      },
      "source": [
        "**Reasoning**:\n",
        "The previous attempt failed because the column name 'Unnamed: 2_y' was not found in `merged_df`. I need to inspect the column names of `merged_df` again to correctly identify the diagnostic and ongoing management basket columns after the merge.\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 160
        },
        "id": "zFxqIGbiKCPE",
        "outputId": "ff81f0ff-e13c-4660-ae0d-6793e2b97e01"
      },
      "source": [
        "display(merged_df.columns)"
      ],
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "Index(['CHRONIC CONDITIONS', 'Unnamed: 1_x', 'Unnamed: 2', 'Unnamed: 3_x',\n",
              "       'Unnamed: 4_x', 'Unnamed: 5_x', 'CONDITION', 'Unnamed: 1_y',\n",
              "       'DIAGNOSTIC BASKET', 'Unnamed: 3_y', 'Unnamed: 4_y', 'Unnamed: 5_y',\n",
              "       'Unnamed: 6', 'Unnamed: 7', 'Unnamed: 8', 'Unnamed: 9',\n",
              "       'ONGOING MANAGEMENT BASKET', 'Unnamed: 11', 'Unnamed: 12',\n",
              "       'Unnamed: 13', 'Unnamed: 14', 'Unnamed: 15', 'Unnamed: 16',\n",
              "       'Unnamed: 17', 'Unnamed: 18'],\n",
              "      dtype='object')"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "42ccbf89"
      },
      "source": [
        "**Reasoning**:\n",
        "Now that I have the correct column names, I can identify the diagnostic and ongoing management basket columns and proceed to consolidate the information for each condition as planned in the previous attempt.\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "63d3c340",
        "outputId": "083c18b7-ba71-407b-d18e-0d7d6c77c25f"
      },
      "source": [
        "# Identify the columns for diagnostic and ongoing management baskets\n",
        "# Based on the displayed columns, 'DIAGNOSTIC BASKET' is the start of the diagnostic columns\n",
        "# and 'ONGOING MANAGEMENT BASKET' is the start of the ongoing management columns.\n",
        "# Let's assume the columns after 'DIAGNOSTIC BASKET' up to 'ONGOING MANAGEMENT BASKET' are diagnostic,\n",
        "# and columns from 'ONGOING MANAGEMENT BASKET' onwards are ongoing management.\n",
        "\n",
        "diagnostic_cols = merged_df.columns[merged_df.columns.get_loc('DIAGNOSTIC BASKET'):merged_df.columns.get_loc('ONGOING MANAGEMENT BASKET')]\n",
        "ongoing_cols = merged_df.columns[merged_df.columns.get_loc('ONGOING MANAGEMENT BASKET'):]\n",
        "\n",
        "# Create a dictionary to store the organized data\n",
        "organized_data = {}\n",
        "\n",
        "# Iterate through each unique condition\n",
        "for condition in merged_df['CHRONIC CONDITIONS'].unique():\n",
        "    condition_df = merged_df[merged_df['CHRONIC CONDITIONS'] == condition]\n",
        "\n",
        "    # Consolidate diagnostic basket information\n",
        "    diagnostic_basket = []\n",
        "    for col in diagnostic_cols:\n",
        "        # Get unique non-null values from the column for this condition\n",
        "        values = condition_df[col].dropna().unique().tolist()\n",
        "        diagnostic_basket.extend(values)\n",
        "\n",
        "    # Consolidate ongoing management basket information\n",
        "    ongoing_management_basket = []\n",
        "    for col in ongoing_cols:\n",
        "        # Get unique non-null values from the column for this condition\n",
        "        values = condition_df[col].dropna().unique().tolist()\n",
        "        ongoing_management_basket.extend(values)\n",
        "\n",
        "    # Store in the organized_data dictionary\n",
        "    organized_data[condition] = {\n",
        "        'diagnostic_basket': diagnostic_basket,\n",
        "        'ongoing_management_basket': ongoing_management_basket\n",
        "    }\n",
        "\n",
        "# Display the organized data for a few conditions to verify\n",
        "import json\n",
        "print(json.dumps(dict(list(organized_data.items())[:3]), indent=4))"
      ],
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{\n",
            "    \"addison's disease\": {\n",
            "        \"diagnostic_basket\": [\n",
            "            \"U & E only\",\n",
            "            \"Creatinine\",\n",
            "            \"Cortisol level\",\n",
            "            \"ACTH stimulation testing\",\n",
            "            \"4171\",\n",
            "            \"4032 or\\n4221 or\\n4223\",\n",
            "            \"4499\",\n",
            "            \"4523\",\n",
            "            \"1\"\n",
            "        ],\n",
            "        \"ongoing_management_basket\": [\n",
            "            \"U & E only\",\n",
            "            \"Creatinine\",\n",
            "            \"4171\",\n",
            "            \"4032 or\\n4221 or\\n4223\",\n",
            "            \"3\",\n",
            "            \"1\"\n",
            "        ]\n",
            "    },\n",
            "    \"diabetes insipidus\": {\n",
            "        \"diagnostic_basket\": [\n",
            "            \"U & E only\",\n",
            "            \"Creatinine\",\n",
            "            \"Osmolality: Serum or urine\",\n",
            "            \"4171\",\n",
            "            \"4032 or\\n4221 or\\n4223\",\n",
            "            \"4093\",\n",
            "            \"1\"\n",
            "        ],\n",
            "        \"ongoing_management_basket\": [\n",
            "            \"U & E only\",\n",
            "            \"Creatinine\",\n",
            "            \"Osmolality: Serum or urine\",\n",
            "            \"4171\",\n",
            "            \"4032 or\\n4221 or\\n4223\",\n",
            "            \"4093\",\n",
            "            \"3\",\n",
            "            \"1\",\n",
            "            \"1\"\n",
            "        ]\n",
            "    },\n",
            "    \"diabetes mellitus type 1\": {\n",
            "        \"diagnostic_basket\": [\n",
            "            \"ECG \\u2013\\nElectrocardiogram\",\n",
            "            \"Microalbuminuria\",\n",
            "            \"Urine analysis (dipstick)\",\n",
            "            \"LDL cholesterol\",\n",
            "            \"HDL cholesterol\",\n",
            "            \"Total cholesterol\",\n",
            "            \"Triglycerides\",\n",
            "            \"U & E only\",\n",
            "            \"Serum creatinine\",\n",
            "            \"Urine creatinine\",\n",
            "            \"Two-hour glucose- OGTT\",\n",
            "            \"Glucose \\u2013\\nrandom/fasting\",\n",
            "            \"1232 or\\n1233 or\\n1236\",\n",
            "            \"4261 or\\n4262\",\n",
            "            \"4188\",\n",
            "            \"4026\",\n",
            "            \"4028\",\n",
            "            \"4027\",\n",
            "            \"4147\",\n",
            "            \"4171\",\n",
            "            \"4032 or\\n4223\",\n",
            "            \"4221\",\n",
            "            \"4049\",\n",
            "            \"4057\",\n",
            "            \"1\"\n",
            "        ],\n",
            "        \"ongoing_management_basket\": [\n",
            "            \"ECG \\u2013\\nElectrocardiogram\",\n",
            "            \"Microalbuminuria\",\n",
            "            \"Urine analysis (dipstick)\",\n",
            "            \"LDL cholesterol\",\n",
            "            \"HDL cholesterol\",\n",
            "            \"Total cholesterol\",\n",
            "            \"Triglycerides\",\n",
            "            \"U & E only\",\n",
            "            \"Serum creatinine\",\n",
            "            \"Urine creatinine\",\n",
            "            \"HbA1c\",\n",
            "            \"Tonometry\",\n",
            "            \"Basic capital equipped in own rooms by ophthalmologists\",\n",
            "            \"Dietitian\",\n",
            "            \"Fundus examination\",\n",
            "            \"Podiatrist\",\n",
            "            \"Diabetes Educator\",\n",
            "            \"1232 or\\n1233 or\\n1236\",\n",
            "            \"4261 or\\n4262\",\n",
            "            \"4188\",\n",
            "            \"4026\",\n",
            "            \"4028\",\n",
            "            \"4027\",\n",
            "            \"4147\",\n",
            "            \"4171\",\n",
            "            \"4032 or\\n4223\",\n",
            "            \"4221\",\n",
            "            \"4064\",\n",
            "            \"3014\",\n",
            "            \"3009\",\n",
            "            \"84200 or\\n84201 or\\n84202 or\\n84203 or\\n84204 or\\n84205\",\n",
            "            \"3003 or\\n3004 or\\n3027\",\n",
            "            \"68301 or\\n68302 or\\n68303 or\\n68304 or\",\n",
            "            \"DFSC1\",\n",
            "            \"DEDUT or DEDU1\",\n",
            "            \"1\",\n",
            "            \"2\",\n",
            "            \"4\",\n",
            "            \"1 (Ophthal- mologist)\\n4 (Other Specialist)\"\n",
            "        ]\n",
            "    }\n",
            "}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "2d10efe6"
      },
      "source": [
        "## Implement retrieval\n",
        "\n",
        "### Subtask:\n",
        "Develop a mechanism (e.g., a function or class) that takes a medical condition as input and retrieves the corresponding structured treatment information (diagnostic and ongoing management baskets).\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "930cf95b"
      },
      "source": [
        "**Reasoning**:\n",
        "Define the function to retrieve treatment information based on the input medical condition using the organized_data dictionary.\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b15471b9",
        "outputId": "3ca587cc-38b8-4ac1-e51a-3f658c891fbf"
      },
      "source": [
        "def get_treatment_info(condition: str):\n",
        "    \"\"\"\n",
        "    Retrieves the diagnostic and ongoing management treatment baskets for a given medical condition.\n",
        "\n",
        "    Args:\n",
        "        condition: The medical condition as a string.\n",
        "\n",
        "    Returns:\n",
        "        A dictionary containing 'diagnostic_basket' and 'ongoing_management_basket'\n",
        "        lists if the condition is found, otherwise a message string.\n",
        "    \"\"\"\n",
        "    cleaned_condition = condition.lower()\n",
        "    if cleaned_condition in organized_data:\n",
        "        return organized_data[cleaned_condition]\n",
        "    else:\n",
        "        return f\"Treatment information not found for '{condition}'.\"\n",
        "\n",
        "# Test the function\n",
        "print(get_treatment_info(\"Addison's Disease\"))\n",
        "print(get_treatment_info(\"Hypothyroidism\"))\n",
        "print(get_treatment_info(\"Unknown Condition\"))"
      ],
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'diagnostic_basket': ['U & E only', 'Creatinine', 'Cortisol level', 'ACTH stimulation testing', '4171', '4032 or\\n4221 or\\n4223', '4499', '4523', '1'], 'ongoing_management_basket': ['U & E only', 'Creatinine', '4171', '4032 or\\n4221 or\\n4223', '3', '1']}\n",
            "{'diagnostic_basket': ['Free thyroxine (FT4)', 'Thyrotropin (TSH)', 'Total cholesterol', '4482', '4507', '4027', '1'], 'ongoing_management_basket': ['Free thyroxine (FT4)', 'Thyrotropin (TSH)', '4482', '4507', '2', '0']}\n",
            "Treatment information not found for 'Unknown Condition'.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6bcf47d4"
      },
      "source": [
        "## Test retrieval\n",
        "\n",
        "### Subtask:\n",
        "Test the retrieval mechanism with the sample conditions provided (Addison’s disease, Diabetes insipidus, Diabetes mellitus type 1, Diabetes mellitus type 2, and Hypothyroidism) to ensure it returns the correct treatment baskets.\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "22c2d9ca"
      },
      "source": [
        "**Reasoning**:\n",
        "Call the retrieval function for each sample condition and print the results to verify the output.\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cef30ab9",
        "outputId": "b314b049-0086-412e-bb32-c6568ad56d37"
      },
      "source": [
        "sample_conditions = [\"Addison's disease\", \"Diabetes insipidus\", \"Diabetes mellitus type 1\", \"Diabetes mellitus type 2\", \"Hypothyroidism\"]\n",
        "\n",
        "for condition in sample_conditions:\n",
        "    print(f\"Treatment information for: {condition}\")\n",
        "    treatment_info = get_treatment_info(condition)\n",
        "    print(treatment_info)\n",
        "    print(\"-\" * 30)"
      ],
      "execution_count": 13,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Treatment information for: Addison's disease\n",
            "{'diagnostic_basket': ['U & E only', 'Creatinine', 'Cortisol level', 'ACTH stimulation testing', '4171', '4032 or\\n4221 or\\n4223', '4499', '4523', '1'], 'ongoing_management_basket': ['U & E only', 'Creatinine', '4171', '4032 or\\n4221 or\\n4223', '3', '1']}\n",
            "------------------------------\n",
            "Treatment information for: Diabetes insipidus\n",
            "{'diagnostic_basket': ['U & E only', 'Creatinine', 'Osmolality: Serum or urine', '4171', '4032 or\\n4221 or\\n4223', '4093', '1'], 'ongoing_management_basket': ['U & E only', 'Creatinine', 'Osmolality: Serum or urine', '4171', '4032 or\\n4221 or\\n4223', '4093', '3', '1', '1']}\n",
            "------------------------------\n",
            "Treatment information for: Diabetes mellitus type 1\n",
            "{'diagnostic_basket': ['ECG –\\nElectrocardiogram', 'Microalbuminuria', 'Urine analysis (dipstick)', 'LDL cholesterol', 'HDL cholesterol', 'Total cholesterol', 'Triglycerides', 'U & E only', 'Serum creatinine', 'Urine creatinine', 'Two-hour glucose- OGTT', 'Glucose –\\nrandom/fasting', '1232 or\\n1233 or\\n1236', '4261 or\\n4262', '4188', '4026', '4028', '4027', '4147', '4171', '4032 or\\n4223', '4221', '4049', '4057', '1'], 'ongoing_management_basket': ['ECG –\\nElectrocardiogram', 'Microalbuminuria', 'Urine analysis (dipstick)', 'LDL cholesterol', 'HDL cholesterol', 'Total cholesterol', 'Triglycerides', 'U & E only', 'Serum creatinine', 'Urine creatinine', 'HbA1c', 'Tonometry', 'Basic capital equipped in own rooms by ophthalmologists', 'Dietitian', 'Fundus examination', 'Podiatrist', 'Diabetes Educator', '1232 or\\n1233 or\\n1236', '4261 or\\n4262', '4188', '4026', '4028', '4027', '4147', '4171', '4032 or\\n4223', '4221', '4064', '3014', '3009', '84200 or\\n84201 or\\n84202 or\\n84203 or\\n84204 or\\n84205', '3003 or\\n3004 or\\n3027', '68301 or\\n68302 or\\n68303 or\\n68304 or', 'DFSC1', 'DEDUT or DEDU1', '1', '2', '4', '1 (Ophthal- mologist)\\n4 (Other Specialist)']}\n",
            "------------------------------\n",
            "Treatment information for: Diabetes mellitus type 2\n",
            "{'diagnostic_basket': ['ECG –\\nElectrocardiogram', 'Microalbuminuria', 'HDL cholesterol', 'Total cholesterol', 'LDL cholesterol', 'Triglycerides', 'Urine analysis (dipstick)', 'U & E only', 'Urine creatinine', 'Glucose –\\nrandom/fasting', 'Serum creatinine', 'Two-hour glucose- OGTT', '1232 or\\n1233 or\\n1236', '4261 or\\n4262', '4028', '4027', '4026', '4147', '4188', '4171', '4221', '4057', '4032 or\\n4223', '4049', '1'], 'ongoing_management_basket': ['ECG –\\nElectrocardiogram', 'Microalbuminuria', 'HDL cholesterol', 'Total cholesterol', 'LDL cholesterol', 'Triglycerides', 'Urine analysis (dipstick)', 'U & E only', 'Urine creatinine', 'HbA1c', 'Serum creatinine', 'Tonometry', 'Basic capital equipped in own rooms by ophthalmologists', 'Fundus examination', 'Podiatrist', 'Diabetes Educator', 'Dietitian', '1232 or\\n1233 or\\n1236', '4261 or\\n4262', '4028', '4027', '4026', '4147', '4188', '4171', '4221', '4064', '4032 or\\n4223', '3014', '3009', '3003 or\\n3004 or\\n3027', '68301 or\\n68302 or\\n68303 or\\n68304 or', 'DFSC1', '84200 or\\n84201 or\\n84202 or\\n84203 or\\n84204 or\\n84205', '1', '2', '4', '1 (Ophthal- mologist)\\n1 (Other Specialist)']}\n",
            "------------------------------\n",
            "Treatment information for: Hypothyroidism\n",
            "{'diagnostic_basket': ['Free thyroxine (FT4)', 'Thyrotropin (TSH)', 'Total cholesterol', '4482', '4507', '4027', '1'], 'ongoing_management_basket': ['Free thyroxine (FT4)', 'Thyrotropin (TSH)', '4482', '4507', '2', '0']}\n",
            "------------------------------\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "41a4402e"
      },
      "source": [
        "## Summary:\n",
        "\n",
        "### Data Analysis Key Findings\n",
        "\n",
        "*   The initial data loading successfully imported two CSV files, \"Endocrine & Metabolic Disorders.csv\" and \"Endocrine & Metabolic Disorders Treatment.csv\", into pandas DataFrames.\n",
        "*   Exploration revealed that both DataFrames contained header information across multiple rows and inconsistent column naming, particularly in \"Endocrine & Metabolic Disorders Treatment.csv\".\n",
        "*   Merging the data required significant cleaning, including removing extraneous header rows from the treatment data and standardizing condition names (handling variations in apostrophes and casing) to ensure accurate matching between the two DataFrames.\n",
        "*   The merged data was successfully structured into a dictionary where each medical condition is a key, and the value is another dictionary containing two lists: `diagnostic_basket` and `ongoing_management_basket`, consolidating relevant treatment items.\n",
        "*   A retrieval function was successfully implemented and tested, which takes a medical condition as input and returns the corresponding diagnostic and ongoing management treatment baskets from the structured data.\n",
        "\n",
        "### Insights or Next Steps\n",
        "\n",
        "*   The data cleaning and structuring steps were crucial for enabling the successful merge and subsequent retrieval of treatment information. Future data sources should be assessed for similar formatting inconsistencies.\n",
        "*   The current retrieval mechanism is a basic lookup. For a more robust AI model, consider implementing natural language processing (NLP) techniques to handle variations in how conditions are queried (e.g., synonyms, misspellings).\n"
      ]
    }
  ]
}